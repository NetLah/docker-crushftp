#!/bin/bash

IMAGE_NAME1="${DOCKER_REPO}:${SOURCE_COMMIT:0:7}"
IMAGE_DEV="${DOCKER_REPO}:dev"
IMAGE_LATEST="${DOCKER_REPO}:latest"

cat <<EOF
Current Dir: ${PWD}
SOURCE_BRANCH: ${SOURCE_BRANCH}
SOURCE_COMMIT: ${SOURCE_COMMIT}
COMMIT_MSG: ${COMMIT_MSG}
DOCKER_REPO: ${DOCKER_REPO}
DOCKERFILE_PATH: ${DOCKERFILE_PATH}
DOCKER_TAG: ${DOCKER_TAG}
IMAGE_NAME: ${IMAGE_NAME}
IMAGE_NAME1: ${IMAGE_NAME1}
IMAGE_DEV: ${IMAGE_DEV}
IMAGE_LATEST: ${IMAGE_LATEST}
EOF

if [[ "$DOCKERFILE_PATH" = "Dockerfile" ]]; then
  cp ../README.md .
else
  cp README.md crushftp/
fi

DOCKER_BUID="DOCKER_BUILDKIT=1 docker build . -f $DOCKERFILE_PATH -t $IMAGE_NAME -t $IMAGE_NAME1 --cache-from=$IMAGE_DEV --cache-from=$IMAGE_LATEST"

if [[ -n "${REPO}" ]]; then
  echo "-- REPO: ${REPO}"
  DOCKER_BUID="$DOCKER_BUID --build-arg REPO=$REPO"
fi

if [[ -n "${CRUSHFTP_VERSION}" ]]; then
  echo "-- CRUSHFTP_VERSION: ${CRUSHFTP_VERSION}"
  DOCKER_BUID="$DOCKER_BUID --build-arg CRUSHFTP_VERSION=$CRUSHFTP_VERSION"
elif [[ "${DOCKER_TAG}" =~ ^[0-9]+(.[0-9]+){0,3}(_[0-9]+)?$ ]] ; then
  echo "-- CRUSHFTP_VERSION->DOCKER_TAG: ${DOCKER_TAG}"
  DOCKER_BUID="$DOCKER_BUID --build-arg CRUSHFTP_VERSION=$DOCKER_TAG"
fi

if [[ -n "${SOURCE}" ]]; then
  echo "-- SOURCE: ${SOURCE}"
  DOCKER_BUID="$DOCKER_BUID --build-arg SOURCE=$SOURCE"
fi

if [[ "${DOCKER_TAG}" =~ ^[0-9]+(.[0-9]+){0,3}(_[0-9]+)?$ ]] ; then
  if [[ -n "${REPO2}" ]]; then
    IMAGE_NAME2="${REPO2}:${DOCKER_TAG}"
    DOCKER_BUID="$DOCKER_BUID -t $IMAGE_NAME2"
  fi
  
  if [[ -n "${IMAGE_NAME3}" ]]; then
    DOCKER_BUID="$DOCKER_BUID -t $IMAGE_NAME3"
  fi
fi

echo "Docker build=> ${DOCKER_BUID}"
eval $DOCKER_BUID

ret_val=$?
if [[ ${ret_val} -eq 0 ]]; then
  echo "Pushing=> ${IMAGE_NAME1} for ${SOURCE_COMMIT}"
  docker push ${IMAGE_NAME1}

  if [[ -n "${IMAGE_NAME2}" ]]; then
    echo "Pushing=> ${IMAGE_NAME2}"
    docker push ${IMAGE_NAME2}
  fi

  if [[ -n "${IMAGE_NAME3}" ]]; then
    echo "Pushing=> ${IMAGE_NAME3}"
    docker push ${IMAGE_NAME3}
  fi
else
  exit ret_val
fi
